template <typename T>
__primitive value_lval {
	static value_lval<T> create(T value) noexcept require(T : movable);
	
	template <bool IsConst>
	const<IsConst>(T)* address() const(IsConst) noexcept;
	
	void assign(T value) noexcept require(T : movable);
	
	template <bool IsConst>
	const<IsConst>(T)& dissolve() const(IsConst) noexcept;
	
	T move() noexcept require(T : movable);
	
	void __move_to(void* ptr, size_t position) noexcept require(T : movable);
}
