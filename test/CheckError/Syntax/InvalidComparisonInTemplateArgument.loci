template <bool V>
class C () { }

template <int A, int B>
import C< A<B > testLessThanInTemplateArgument();

template <int A, int B>
import C< A>B > testMoreThanInTemplateArgument();

template <int A, int B>
import C< A==B > testIsEqualInTemplateArgument();

template <int A, int B>
import C< A!=B > testIsNotEqualInTemplateArgument();

export void testLessThanInVariableTemplateArgument(unused C< A<B > value) { }

export void testMoreThanInVariableTemplateArgument(unused C< A>B > value) { }

export void testIsEqualInVariableTemplateArgument(unused C< A==B > value) { }

export void testIsNotEqualInVariableTemplateArgument(unused C< A!=B > value) { }
