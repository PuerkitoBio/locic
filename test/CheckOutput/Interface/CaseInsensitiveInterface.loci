// Test output.
import void testPrint(const ubyte * str, ...);

class TestClass (unsigned int value) {
	static Create(unsigned int value) {
		testPrint(C"TestClass.Create: Value = %u", value);
		return @(value);
	}
	
	unsigned int getValue() {
		testPrint(C"TestClass.getValue: Value = %u", @value);
		return @value;
	}
	
}

// By canonicalisation (underscores removed and
// all converted to lower case) of the method name,
// this should be a valid interface for TestClass.
interface TestInterface {
	unsigned int get_value();
}

void polymorphicPrint(TestInterface& object) {
	unsigned int value = object.get_value();
	testPrint(C"polymorphicPrint: Value = %u", value);
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	auto testInstance = TestClass(54321u);
	
	polymorphicPrint(testInstance);
	
	return 0;
}

