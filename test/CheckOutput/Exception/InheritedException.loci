// Test output.
import void testPrint(const ubyte * str, ...);

exception GrandParentException(int value);

exception ParentException(int value1, int value2) : GrandParentException(value1 + value2);

exception ChildException(int value1, int value2, int value3) : ParentException(value1 + value2, value2 + value3);

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	try {
		throw ChildException(1, 10, 100);
	} catch (ChildException e) {
		testPrint(C"Caught parent exception with values %d, %d and %d.", e.value1, e.value2, e.value3);
	}
	
	try {
		throw ChildException(1, 10, 100);
	} catch (ParentException e) {
		testPrint(C"Caught parent exception with values %d and %d.", e.value1, e.value2);
	}
	
	try {
		throw ChildException(1, 10, 100);
	} catch (GrandParentException e) {
		testPrint(C"Caught grand parent exception with value %d.", e.value);
	}
	return 0;
}

