// Test output.
import void testPrint(const ubyte * str, ...) noexcept;

class ExampleClass(int i) {
	static Create(int i) {
		testPrint(C"ExampleClass Constructor: %d.", i);
		return @(i);
	}
	
	~ {
		testPrint(C"ExampleClass Destructor: %d.", @i);
	}
}

exception ExampleError(long value);
exception ExampleError2(long value);

void throwFunction(bool throwFirst) {
	unused auto value1 = ExampleClass(1);
	unused auto value2 = ExampleClass(2);
	
	try {
		unused auto value3 = ExampleClass(3);
		if (throwFirst) {
			throw ExampleError(424242);
		} else {
			throw ExampleError2(212121);
		}
	} catch (ExampleError2 error) {
		testPrint(C"Caught exception V2 with value %ld!", error.value);
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	testPrint(C"Started.");
	try {
		unused auto value0 = ExampleClass(0);
		throwFunction(false);
		throwFunction(true);
	} catch (ExampleError error) {
		unused auto value4 = ExampleClass(4);
		testPrint(C"Caught exception with value %ld!", error.value);
	}
	testPrint(C"Finished.");
	return 0;
}

