// Test output.
import void testPrint(const ubyte * const str, ...) noexcept;

class StaticMethodClass() {
	static int makeInt() {
		return 1000;
	}
	
	static float makeFloat() {
		return 2000.0f;
	}
}

interface StaticMethodAPI {
	static int makeInt();
	
	static float makeFloat();
}

template <typename T: StaticMethodAPI>
class TestClass() {
	static void print() {
		testPrint(C"TestClass.print(): makeInt() = %d", T.makeInt());
		testPrint(C"TestClass.print(): makeFloat() = %.1f", T.makeFloat());
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	TestClass<StaticMethodClass>::print();
	return 0;
}

