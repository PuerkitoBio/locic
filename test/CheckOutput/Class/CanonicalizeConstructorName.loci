// Test output.
import void testPrint(const ubyte * const str, ...) noexcept;

// Class definition.
class TestClass(int value) {
	static create(int value) noexcept {
		testPrint(C"TestClass.create: Value = %d", value);
		return @(value);
	}
	
	static null() noexcept {
		testPrint(C"TestClass.null");
		return @(48);
	}
	
	static another_constructor() noexcept {
		testPrint(C"TestClass.another_constructor");
		return @(45);
	}
	
	void print() noexcept {
		testPrint(C"TestClass: @value = %d", @value);
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	unused_result TestClass(50);
	unused_result TestClass::create(49);
	
	TestClass nullObject = null;
	nullObject.print();
	
	TestClass object = TestClass::AnotherConstructor();
	object.print();
	return 0;
}

