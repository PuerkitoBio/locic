// Test output.
import void testPrint(const ubyte * str, ...) noexcept;

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	testPrint(C"testEntryPoint: Add outer scope exit #1");
	scope (exit) {
		testPrint(C"testEntryPoint: Outer scope exit #1");
		int i = 0;
		while (i < 3) {
			testPrint(C"testEntryPoint: Outer scope exit #1 loop value = %d", i);
			i = i + 1;
			if (i == 2) {
				break;
			}
		}
	}
	
	{
		testPrint(C"testEntryPoint: Add inner scope exit");
		scope (exit) {
			testPrint(C"testEntryPoint: Inner scope exit");
			int i = 0;
			while (i < 3) {
				testPrint(C"testEntryPoint: Inner scope exit loop value = %d", i);
				i = i + 1;
				if (i == 2) {
					break;
				}
			}
		}
	}
	
	testPrint(C"testEntryPoint: Add outer scope exit #2");
	scope (exit) {
		testPrint(C"testEntryPoint: Outer scope exit #2");
		int i = 0;
		while (i < 3) {
			testPrint(C"testEntryPoint: Outer scope exit #2 loop value = %d", i);
			i = i + 1;
			if (i == 2) {
				break;
			}
		}
	}
	
	return 0;
}

