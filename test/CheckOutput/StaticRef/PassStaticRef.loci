// Test output.
import void testPrint(const ubyte * str, ...);

class TestClass (int value) {
	static thirty() {
		return @(30);
	}
	
	static fourty() {
		return @(40);
	}
	
	static create = default;
	
	void print() const {
		testPrint(C"TestClass: value = %d", @value);
	}
}

void function(staticref<TestClass> typename_t typeValue) {
	testPrint(C"typeValue.thirty()");
	typeValue.thirty().print();
	
	testPrint(C"typeValue.fourty()");
	typeValue.fourty().print();
	
	testPrint(C"typeValue.create(50)");
	typeValue.create(50).print();
	
	testPrint(C"typeValue(60)");
	typeValue(60).print();
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	function(TestClass);
	return 0;
}

