// Test output.
import void testPrint(const ubyte * str, ...) noexcept;

class TestClass(int value) {
	static create(int value) {
		testPrint(C"Create TestClass: %d", value);
		return @(value);
	}
	
	~ {
		testPrint(C"Destroy TestClass: %d", @value);
	}
}

void function(std::unique_ptr<TestClass> testObject) {
	testPrint(C"function()!");
	unused_result testObject;
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	auto uniquePtr = std::new_unique<TestClass>(TestClass(1));
	
	testPrint(C"Calling function().");
	
	function(move uniquePtr);
	
	testPrint(C"Finished function().");
	
	return 0;
}

