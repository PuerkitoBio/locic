// Test output.
import void testPrint(const ubyte * str, ...) noexcept;

class TestClass(int value) {
	static create(int value) {
		testPrint(C"Create TestClass: %d", value);
		return @(value);
	}
	
	~ {
		testPrint(C"Destroy TestClass: %d", @value);
	}
}

// Entry point.
export int testEntryPoint(unused int argc, unused ubyte ** argv) {
	auto rawPtr = std::new_raw<TestClass>(TestClass(0));
	
	testPrint(C"Before delete.");
	
	std::delete_raw<TestClass>(rawPtr);
	
	testPrint(C"After delete.");
	
	return 0;
}

